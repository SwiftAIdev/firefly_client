# coding: utf-8

"""
    Firefly III API v2.1.0

    This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2024-09-10T05:07:57+00:00  Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 

    The version of the OpenAPI document: 2.1.0
    Contact: james@firefly-iii.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firefly_client.api.accounts_api import AccountsApi


class TestAccountsApi(unittest.TestCase):
    """AccountsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AccountsApi()

    def tearDown(self) -> None:
        pass

    def test_delete_account(self) -> None:
        """Test case for delete_account

        Permanently delete account.
        """
        pass

    def test_get_account(self) -> None:
        """Test case for get_account

        Get single account.
        """
        pass

    def test_list_account(self) -> None:
        """Test case for list_account

        List all accounts.
        """
        pass

    def test_list_attachment_by_account(self) -> None:
        """Test case for list_attachment_by_account

        Lists all attachments.
        """
        pass

    def test_list_piggy_bank_by_account(self) -> None:
        """Test case for list_piggy_bank_by_account

        List all piggy banks related to the account.
        """
        pass

    def test_list_transaction_by_account(self) -> None:
        """Test case for list_transaction_by_account

        List all transactions related to the account.
        """
        pass

    def test_store_account(self) -> None:
        """Test case for store_account

        Create new account.
        """
        pass

    def test_update_account(self) -> None:
        """Test case for update_account

        Update existing account.
        """
        pass


if __name__ == '__main__':
    unittest.main()
