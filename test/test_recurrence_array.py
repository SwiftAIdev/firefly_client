# coding: utf-8

"""
    Firefly III API v2.1.0

    This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2024-09-10T05:07:57+00:00  Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 

    The version of the OpenAPI document: 2.1.0
    Contact: james@firefly-iii.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firefly_client.models.recurrence_array import RecurrenceArray

class TestRecurrenceArray(unittest.TestCase):
    """RecurrenceArray unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecurrenceArray:
        """Test RecurrenceArray
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecurrenceArray`
        """
        model = RecurrenceArray()
        if include_optional:
            return RecurrenceArray(
                data = [
                    firefly_client.models.recurrence_read.RecurrenceRead(
                        type = 'recurrences', 
                        id = '2', 
                        attributes = firefly_client.models.recurrence.Recurrence(
                            created_at = '2018-09-17T12:46:47+01:00', 
                            updated_at = '2018-09-17T12:46:47+01:00', 
                            type = 'withdrawal', 
                            title = 'Rent', 
                            description = 'Recurring transaction for the monthly rent', 
                            first_date = 'Mon Sep 17 00:00:00 UTC 2018', 
                            latest_date = 'Mon Sep 17 00:00:00 UTC 2018', 
                            repeat_until = 'Mon Sep 17 00:00:00 UTC 2018', 
                            nr_of_repetitions = 5, 
                            apply_rules = True, 
                            active = True, 
                            notes = 'Some notes', 
                            repetitions = [
                                firefly_client.models.recurrence_repetition.RecurrenceRepetition(
                                    id = '2', 
                                    created_at = '2018-09-17T12:46:47+01:00', 
                                    updated_at = '2018-09-17T12:46:47+01:00', 
                                    type = 'weekly', 
                                    moment = '3', 
                                    skip = 0, 
                                    weekend = 1, 
                                    description = 'Every week on Friday', 
                                    occurrences = [
                                        '2018-09-17T12:46:47+01:00'
                                        ], )
                                ], 
                            transactions = [
                                firefly_client.models.recurrence_transaction.RecurrenceTransaction(
                                    id = 'ID of the recurring transaction. Not to be confused with the ID of the recurrence itself.', 
                                    description = 'Rent for the current month', 
                                    amount = '123.45', 
                                    foreign_amount = '123.45', 
                                    currency_id = '3', 
                                    currency_code = 'EUR', 
                                    currency_symbol = '€', 
                                    currency_decimal_places = 2, 
                                    foreign_currency_id = '17', 
                                    foreign_currency_code = 'GBP', 
                                    foreign_currency_symbol = '$', 
                                    foreign_currency_decimal_places = 2, 
                                    budget_id = '4', 
                                    budget_name = 'Groceries', 
                                    category_id = '211', 
                                    category_name = 'Bills', 
                                    source_id = '913', 
                                    source_name = 'Checking account', 
                                    source_iban = 'NL02ABNA0123456789', 
                                    source_type = 'Asset account', 
                                    destination_id = '258', 
                                    destination_name = 'Buy and Large', 
                                    destination_iban = 'NL02ABNA0123456789', 
                                    destination_type = 'Asset account', 
                                    tags = [
                                        'Barbecue preparation'
                                        ], 
                                    piggy_bank_id = '123', 
                                    piggy_bank_name = '', 
                                    bill_id = '123', 
                                    bill_name = '', )
                                ], ), 
                        links = firefly_client.models.object_link.ObjectLink(
                            0 = firefly_client.models.object_link_0.ObjectLink_0(
                                rel = 'self', 
                                uri = '/OBJECTS/1', ), 
                            self = 'https://demo.firefly-iii.org/api/v1/OBJECTS/1', ), )
                    ],
                meta = firefly_client.models.meta.Meta(
                    pagination = firefly_client.models.meta_pagination.Meta_pagination(
                        total = 3, 
                        count = 20, 
                        per_page = 100, 
                        current_page = 1, 
                        total_pages = 1, ), ),
                links = firefly_client.models.page_link.PageLink(
                    self = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=4', 
                    first = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=1', 
                    next = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=3', 
                    prev = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=2', 
                    last = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=12', )
            )
        else:
            return RecurrenceArray(
                data = [
                    firefly_client.models.recurrence_read.RecurrenceRead(
                        type = 'recurrences', 
                        id = '2', 
                        attributes = firefly_client.models.recurrence.Recurrence(
                            created_at = '2018-09-17T12:46:47+01:00', 
                            updated_at = '2018-09-17T12:46:47+01:00', 
                            type = 'withdrawal', 
                            title = 'Rent', 
                            description = 'Recurring transaction for the monthly rent', 
                            first_date = 'Mon Sep 17 00:00:00 UTC 2018', 
                            latest_date = 'Mon Sep 17 00:00:00 UTC 2018', 
                            repeat_until = 'Mon Sep 17 00:00:00 UTC 2018', 
                            nr_of_repetitions = 5, 
                            apply_rules = True, 
                            active = True, 
                            notes = 'Some notes', 
                            repetitions = [
                                firefly_client.models.recurrence_repetition.RecurrenceRepetition(
                                    id = '2', 
                                    created_at = '2018-09-17T12:46:47+01:00', 
                                    updated_at = '2018-09-17T12:46:47+01:00', 
                                    type = 'weekly', 
                                    moment = '3', 
                                    skip = 0, 
                                    weekend = 1, 
                                    description = 'Every week on Friday', 
                                    occurrences = [
                                        '2018-09-17T12:46:47+01:00'
                                        ], )
                                ], 
                            transactions = [
                                firefly_client.models.recurrence_transaction.RecurrenceTransaction(
                                    id = 'ID of the recurring transaction. Not to be confused with the ID of the recurrence itself.', 
                                    description = 'Rent for the current month', 
                                    amount = '123.45', 
                                    foreign_amount = '123.45', 
                                    currency_id = '3', 
                                    currency_code = 'EUR', 
                                    currency_symbol = '€', 
                                    currency_decimal_places = 2, 
                                    foreign_currency_id = '17', 
                                    foreign_currency_code = 'GBP', 
                                    foreign_currency_symbol = '$', 
                                    foreign_currency_decimal_places = 2, 
                                    budget_id = '4', 
                                    budget_name = 'Groceries', 
                                    category_id = '211', 
                                    category_name = 'Bills', 
                                    source_id = '913', 
                                    source_name = 'Checking account', 
                                    source_iban = 'NL02ABNA0123456789', 
                                    source_type = 'Asset account', 
                                    destination_id = '258', 
                                    destination_name = 'Buy and Large', 
                                    destination_iban = 'NL02ABNA0123456789', 
                                    destination_type = 'Asset account', 
                                    tags = [
                                        'Barbecue preparation'
                                        ], 
                                    piggy_bank_id = '123', 
                                    piggy_bank_name = '', 
                                    bill_id = '123', 
                                    bill_name = '', )
                                ], ), 
                        links = firefly_client.models.object_link.ObjectLink(
                            0 = firefly_client.models.object_link_0.ObjectLink_0(
                                rel = 'self', 
                                uri = '/OBJECTS/1', ), 
                            self = 'https://demo.firefly-iii.org/api/v1/OBJECTS/1', ), )
                    ],
                meta = firefly_client.models.meta.Meta(
                    pagination = firefly_client.models.meta_pagination.Meta_pagination(
                        total = 3, 
                        count = 20, 
                        per_page = 100, 
                        current_page = 1, 
                        total_pages = 1, ), ),
                links = firefly_client.models.page_link.PageLink(
                    self = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=4', 
                    first = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=1', 
                    next = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=3', 
                    prev = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=2', 
                    last = 'https://demo.firefly-iii.org/api/v1/OBJECT?&page=12', ),
        )
        """

    def testRecurrenceArray(self):
        """Test RecurrenceArray"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
