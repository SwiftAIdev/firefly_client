# coding: utf-8

"""
    Firefly III API v2.1.0

    This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2024-09-10T05:07:57+00:00  Please keep in mind that the demo site does not accept requests from curl, colly, wget, etc. You must use a browser or a tool like Postman to make requests. Too many script kiddies out there, sorry about that. 

    The version of the OpenAPI document: 2.1.0
    Contact: james@firefly-iii.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firefly_client.api.rule_groups_api import RuleGroupsApi


class TestRuleGroupsApi(unittest.TestCase):
    """RuleGroupsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = RuleGroupsApi()

    def tearDown(self) -> None:
        pass

    def test_delete_rule_group(self) -> None:
        """Test case for delete_rule_group

        Delete a rule group.
        """
        pass

    def test_fire_rule_group(self) -> None:
        """Test case for fire_rule_group

        Fire the rule group on your transactions.
        """
        pass

    def test_get_rule_group(self) -> None:
        """Test case for get_rule_group

        Get a single rule group.
        """
        pass

    def test_list_rule_by_group(self) -> None:
        """Test case for list_rule_by_group

        List rules in this rule group.
        """
        pass

    def test_list_rule_group(self) -> None:
        """Test case for list_rule_group

        List all rule groups.
        """
        pass

    def test_store_rule_group(self) -> None:
        """Test case for store_rule_group

        Store a new rule group.
        """
        pass

    def test_test_rule_group(self) -> None:
        """Test case for test_rule_group

        Test which transactions would be hit by the rule group. No changes will be made.
        """
        pass

    def test_update_rule_group(self) -> None:
        """Test case for update_rule_group

        Update existing rule group.
        """
        pass


if __name__ == '__main__':
    unittest.main()
